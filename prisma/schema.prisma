// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String        @id @default(uuid()) @db.Uuid
  createdAt        DateTime      @default(now())
  updateAt         DateTime      @updatedAt
  email            String        @unique
  userName         String?       @unique
  password         String
  hashedRt         String?
  firstName        String
  lastName         String
  title            String?
  cin              String        @unique
  phone            String?       @unique
  firstNameArabic  String?
  lastNameArabic   String?
  birthDate        String?
  birthPlace       String?
  birthPlaceArabic String?
  address          String?
  city             String?
  cityArabic       String?
  codePostal       String?
  roles            Role          @default(USER)
  candidatures     Candidature[]

  @@index([firstName], name: "frst_nm_idx")
  @@index([lastName], name: "lst_nm_idx")
  @@index([email], name: "eml_idx")
  @@index([cin], name: "cin_idx")
  @@map("users")
}

model Concour {
  id                String                @id @default(uuid()) @db.Uuid
  createdAt         DateTime              @default(now())
  updateAt          DateTime              @updatedAt
  name              String
  location          String?
  description       String
  closingDate       DateTime?
  candidatures      Candidature[]
  concourSpeciality ConcourToSpeciality[]

  @@map("concours")
}

model ConcourToSpeciality {
  concourId    String     @db.Uuid
  specialityId String     @db.Uuid
  concour      Concour    @relation(fields: [concourId], references: [id], onDelete: Cascade)
  speciality   Speciality @relation(fields: [specialityId], references: [id], onDelete: Cascade)

  @@id([concourId, specialityId])
  @@index([concourId], name: "cnc_id_idx")
  @@index([specialityId], name: "spc_id_idx")
  @@map("concour_specialities_speciality")
}

model Candidature {
  createdAt         DateTime   @default(now())
  updateAt          DateTime   @updatedAt
  currentJob        String?
  graduationYear    DateTime
  graduationCountry String
  establishment     String
  establishmentName String
  degreeLevel       String
  degreeSpeciality  String
  degreeTitle       String
  state             String
  isArchived        Boolean
  dossierLink       String
  concourId         String     @db.Uuid
  userId            String     @db.Uuid
  specialityId      String     @db.Uuid
  concour           Concour    @relation(fields: [concourId], references: [id], onDelete: Cascade)
  user              User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  speciality        Speciality @relation(fields: [specialityId], references: [id], onDelete: Cascade)

  @@id([concourId, userId, specialityId])
  @@index([concourId], name: "cnd_cnc_id_idx")
  @@index([establishment], name: "cnd_etbl_idx")
  @@map("candidatures")
}

model Speciality {
  id                String                @id @default(uuid()) @db.Uuid
  createdAt         DateTime              @default(now())
  updateAt          DateTime              @updatedAt
  name              String                @unique
  concourSpeciality ConcourToSpeciality[]
  Candidature       Candidature[]

  @@map("specialities")
}

enum Role {
  USER
  MANAGER
  ADMIN
}
